/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CheckList.java
 *
 * Created on Oct 27, 2012, 8:43:11 AM
 */

package UI;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;

/**
 *
 * @author unicorn
 */
public class CheckList1 extends javax.swing.JDialog implements ActionListener{

    private static int numFields;
    private static ArrayList<String> list = new ArrayList<String>();
    private static ArrayList<JCheckBox> checkBox = new ArrayList<JCheckBox>();
    private JPanel jPanel2,jPanel3;
    private JButton jButton1,jButton2;

    /** Creates new form CheckList */
    public CheckList1(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadPreferences();
        initUI();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CheckList1 dialog = new CheckList1(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

 private void loadPreferences()
    {
        Properties prop = new Properties();
        list.clear();

    	try {
    		prop.load(new FileInputStream("config.properties"));

                numFields = Integer.parseInt(prop.getProperty("numberOfFields"));
                for(int i = 0;i < numFields ; i++)
                {
                    list.add(prop.getProperty("Field"+i));
                }

            } catch (IOException ex) {
            System.out.println(ex.getMessage());
            }
    }

    private void initUI()
    {
        TitledBorder title;

        jPanel2 = new JPanel();
        jPanel3 = new JPanel();

        jButton1 = new JButton("done");
        jButton2 = new JButton("cancel");

        jButton1.setSize(80, 40);
        jButton1.setActionCommand("done");
        jButton1.addActionListener(this);
        
        jButton2.setSize(80, 40);
        jButton2.setActionCommand("cancel");
        jButton2.addActionListener(this);

        jPanel2.setLayout(new GridLayout(0, 1,1,8));
        jPanel3.setLayout(new GridLayout(1, 2));

        title = BorderFactory.createTitledBorder("Select result fields");
        setLayout(new BorderLayout());

        jPanel2.setBorder(title);

        add(jPanel2, BorderLayout.WEST);
        add(jPanel2, BorderLayout.NORTH);

        checkBox.clear();
        for(int i = 0; i<list.size() ;i++)
        {
            checkBox.add(new JCheckBox(list.get(i)));
            jPanel2.add(checkBox.get(i));
        }

        
        jPanel3.setLayout(new FlowLayout(FlowLayout.CENTER,60,40));
       add(jPanel3);

       jPanel3.add(jButton1);
       jPanel3.add(jButton2);

    }

    public void actionPerformed(ActionEvent e) {

        if("cancel".equals(e.getActionCommand()))
        {
            this.dispose();
        }
        else if("done".equals(e.getActionCommand()))
        {
            int count = 0;
            String sql = "";
            for(int i = 0; i<list.size(); i++)
            {
                if(checkBox.get(i).isSelected())
                {
                    sql = sql.concat("G." + list.get(i) + ",");
                    count++;
                }
            }
            if(sql.length() != 0)
            {
                sql = sql.substring(0, sql.lastIndexOf(","));
            }
            Home.selection = sql;
            Home.selectioncount = count;
            this.dispose();
        }
    }

}
